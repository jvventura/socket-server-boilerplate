{"version":3,"sources":["../../src/app/connector.js"],"names":["urls","Connector","count","db","mongoose","queue","jackrabbit","emit","self","connect","conenction","on","log","_ready","err","_lost","EventEmitter"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;kBAqEe,UAASA,IAAT,EAAe;AAC7B,QAAO,IAAIC,SAAJ,CAAcD,IAAd,CAAP;AACA,C;;AAvED;;;;AACA;;;;AACA;;;;AAEA;;;;;;IAEMC,S;;;AACL,oBAAYD,IAAZ,EAAkB;AAAA;;AAAA;;AAEjB,QAAKE,KAAL,GAAa,CAAb;AACA,QAAKF,IAAL,GAAYA,QAAQ,EAApB;;AAEA,QAAKG,EAAL,GAAU,MAAKC,QAAL,EAAV;AACA,QAAKC,KAAL,GAAa,MAAKC,UAAL,EAAb;AANiB;AAOjB;;AAGD;;;;2BAES;AACR;AACA,OAAI,EAAE,KAAKJ,KAAX,EAAkB;AACjB,SAAKK,IAAL,CAAU,OAAV;AACA;AACD;;;0BAEO;AACP;AACA,QAAKA,IAAL,CAAU,MAAV;AACA;;AAED;;;;6BAEW;AACV,OAAIC,OAAO,IAAX;;AAEA,sBAASC,OAAT,CAAiB,KAAKT,IAAL,CAAUI,QAA3B;;AAEA,sBAASM,UAAT,CAAoBC,EAApB,CAAuB,WAAvB,EAAoC,YAAM;AACzC,qBAAOC,GAAP,CAAW,MAAX,EAAmB,gCAAnB;AACAJ,SAAKK,MAAL;AACA,IAHD;AAIA,sBAASH,UAAT,CAAoBC,EAApB,CAAuB,OAAvB,EAAgC,eAAO;AACtC,qBAAOC,GAAP,CAAW,OAAX,EAAoBE,GAApB;AACA,IAFD;AAGA,sBAASJ,UAAT,CAAoBC,EAApB,CAAuB,cAAvB,EAAuC,YAAM;AAC5C,qBAAOC,GAAP,CAAW,MAAX,EAAmB,mCAAnB;AACA,IAFD;AAGA;;;+BAEY;AACZ,OAAIJ,OAAO,IAAX;;AAEA,UAAO,0BAAW,KAAKR,IAAL,CAAUM,UAArB,EACNK,EADM,CACH,WADG,EACU,YAAM;AACtB,qBAAOC,GAAP,CAAW,MAAX,EAAmB,kCAAnB;AACAJ,SAAKK,MAAL;AACA,IAJM,EAKNF,EALM,CAKH,OALG,EAKM,eAAO;AACnB,qBAAOC,GAAP,CAAW,OAAX,EAAoBE,GAApB;AACA,IAPM,EAQNH,EARM,CAQH,cARG,EAQa,YAAM;AACzB,qBAAOC,GAAP,CAAW,MAAX,EAAmB,qCAAnB;AACAJ,SAAKO,KAAL;AACA,IAXM,CAAP;AAYA;;;EA3DsB,iBAAOC,Y","file":"connector.js","sourcesContent":["import events from 'events';\nimport jackrabbit from 'jackrabbit';\nimport mongoose from 'mongoose';\n\nimport logger from '../modules/logger';\n\nclass Connector extends events.EventEmitter {\n\tconstructor(urls) {\n\t\tsuper();\n\t\tthis.count = 2;\n\t\tthis.urls = urls || {};\n\n\t\tthis.db = this.mongoose();\n\t\tthis.queue = this.jackrabbit();\n\t}\n\n\n\t// 'Private' methods.\n\n\t_ready() {\n\t\t// Connection ready!\n\t\tif (--this.count) {\n\t\t\tthis.emit('ready');\n\t\t}\n\t}\n\n\t_lost() {\n\t\t// Connection lost!\n\t\tthis.emit('lost');\n\t}\n\n\t// 'Public' methods.\n\n\tmongoose() {\n\t\tlet self = this;\n\n\t\tmongoose.connect(this.urls.mongoose);\n\n\t\tmongoose.conenction.on('connected', () => {  \n\t\t\tlogger.log('info', 'Connector: Mongoose connected.');\n\t\t\tself._ready();\n\t\t});\n\t\tmongoose.conenction.on('error', err => {\n\t\t\tlogger.log('error', err);\n\t\t});\n\t\tmongoose.conenction.on('disconnected', () => {\n\t\t\tlogger.log('info', 'Connector: Mongoose disconnected.');\n\t\t});\n\t}\n\n\tjackrabbit() {\n\t\tlet self = this;\n\n\t\treturn jackrabbit(this.urls.jackrabbit)\n\t\t.on('connected', () => {\n\t\t\tlogger.log('info', 'Connector: Jackrabbit connected.');\n\t\t\tself._ready();\n\t\t})\n\t\t.on('error', err => {\n\t\t\tlogger.log('error', err);\n\t\t})\n\t\t.on('disconnected', () => {\n\t\t\tlogger.log('info', 'Connector: Jackrabbit disconnected.');\n\t\t\tself._lost();\n\t\t});\n\t}\n\n}\n\nexport default function(urls) {\n\treturn new Connector(urls);\n}"]}