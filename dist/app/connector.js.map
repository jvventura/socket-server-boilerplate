{"version":3,"sources":["../../src/app/connector.js"],"names":["urls","Connector","count","db","dynamoDB","queue","jackrabbit","tracker","keen","emit","self","client","doc","DocumentClient","region","log","_ready","rabbit","on","err","_lost","default","EventEmitter"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;kBA8Fe,UAASA,IAAT,EAAe;AAC7B,QAAO,IAAIC,SAAJ,CAAcD,IAAd,CAAP;AACA,C;;AAhGD;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;;;;;IAEMC,S;;;AACL,oBAAYD,IAAZ,EAAkB;AAAA;;AAAA;;AAEjB,QAAKE,KAAL,GAAa,CAAb;AACA,QAAKF,IAAL,GAAYA,QAAQ,EAApB;;AAEA,QAAKG,EAAL,GAAU,MAAKC,QAAL,EAAV;AACA,QAAKC,KAAL,GAAa,MAAKC,UAAL,EAAb;AACA,QAAKC,OAAL,GAAe,MAAKC,IAAL,EAAf;AAPiB;AAQjB;;AAGD;;;;2BAES;AACR;AACA,OAAI,EAAE,KAAKN,KAAP,IAAgB,CAApB,EAAuB;AACtB,SAAKO,IAAL,CAAU,OAAV;AACA;AACD;;;0BAEO;AACP;AACA,QAAKA,IAAL,CAAU,MAAV;AACA;;AAED;;;;6BAEW;AACV,OAAIC,OAAO,IAAX;;AAEA,OAAIC,SAAS,wBAAb;AACCA,UAAOC,GAAP,GAAa,IAAI,mBAASC,cAAb,CAA4B,EAACC,QAAQ,WAAT,EAA5B,CAAb;AACD,oBAAOC,GAAP,CAAW,MAAX,EAAmB,gCAAnB;AACAL,QAAKM,MAAL;AACA,UAAOL,MAAP;AACA;;AAEF;;;;;;;;;;;;;;;;;;;;;+BAmBc;AACZ,OAAID,OAAO,IAAX;;AAEA,OAAIO,SAAS,0BAAW,KAAKjB,IAAL,CAAUM,UAArB,CAAb;AACAW,UAAOC,EAAP,CAAU,WAAV,EAAuB,YAAM;AAC5B,qBAAOH,GAAP,CAAW,MAAX,EAAmB,kCAAnB;AACAL,SAAKM,MAAL;AACA,IAHD;AAIAC,UAAOC,EAAP,CAAU,OAAV,EAAmB,eAAO;AACzB,qBAAOH,GAAP,CAAW,OAAX,EAAoBI,GAApB;AACA,IAFD;AAGAF,UAAOC,EAAP,CAAU,cAAV,EAA0B,YAAM;AAC/B,qBAAOH,GAAP,CAAW,MAAX,EAAmB,qCAAnB;AACAL,SAAKU,KAAL;AACA,IAHD;AAIA,UAAOH,OAAOI,OAAP,EAAP;AACA;;;yBAEM;AACN,OAAIX,OAAO,IAAX;;AAEA,OAAIC,SAAS,2BAAW,KAAKX,IAAL,CAAUQ,IAArB,CAAb;AACA,oBAAOO,GAAP,CAAW,MAAX,EAAmB,4BAAnB;AACAL,QAAKM,MAAL;AACA,UAAOL,MAAP;AACA;;;EAlFsB,iBAAOW,Y","file":"connector.js","sourcesContent":["import events from 'events';\nimport jackrabbit from 'jackrabbit';\nimport mongoose from 'mongoose';\nimport KeenIO from 'keen-tracking';\nimport DynamoDB from 'aws-sdk/clients/dynamodb';\n\nimport logger from '../modules/logger';\n\nclass Connector extends events.EventEmitter {\n\tconstructor(urls) {\n\t\tsuper();\n\t\tthis.count = 3;\n\t\tthis.urls = urls || {};\n\n\t\tthis.db = this.dynamoDB();\n\t\tthis.queue = this.jackrabbit();\n\t\tthis.tracker = this.keen();\n\t}\n\n\n\t// 'Private' methods.\n\n\t_ready() {\n\t\t// Connection ready!\n\t\tif (--this.count == 0) {\n\t\t\tthis.emit('ready');\n\t\t}\n\t}\n\n\t_lost() {\n\t\t// Connection lost!\n\t\tthis.emit('lost');\n\t}\n\n\t// 'Public' methods.\n\n\tdynamoDB() {\n\t\tlet self = this;\n\n\t\tlet client = new DynamoDB();\n\t\t\tclient.doc = new DynamoDB.DocumentClient({region: 'us-west-2'});\n\t\tlogger.log('info', 'Connector: DynamoDB connected.');\n\t\tself._ready();\n\t\treturn client;\n\t}\n\n/*\n\tmongoose() {\n\t\tlet self = this;\n\n\t\tmongoose.connect(this.urls.mongoose);\n\n\t\tmongoose.connection.on('connected', () => {  \n\t\t\tlogger.log('info', 'Connector: Mongoose connected.');\n\t\t\tself._ready();\n\t\t});\n\t\tmongoose.connection.on('error', err => {\n\t\t\tlogger.log('error', err);\n\t\t});\n\t\tmongoose.connection.on('disconnected', () => {\n\t\t\tlogger.log('info', 'Connector: Mongoose disconnected.');\n\t\t});\n\t}\n*/ \n\n\tjackrabbit() {\n\t\tlet self = this;\n\n\t\tlet rabbit = jackrabbit(this.urls.jackrabbit);\n\t\trabbit.on('connected', () => {\n\t\t\tlogger.log('info', 'Connector: Jackrabbit connected.');\n\t\t\tself._ready();\n\t\t})\n\t\trabbit.on('error', err => {\n\t\t\tlogger.log('error', err);\n\t\t})\n\t\trabbit.on('disconnected', () => {\n\t\t\tlogger.log('info', 'Connector: Jackrabbit disconnected.');\n\t\t\tself._lost();\n\t\t});\n\t\treturn rabbit.default();\n\t}\n\n\tkeen() {\n\t\tlet self = this;\n\n\t\tlet client = new KeenIO(this.urls.keen);\n\t\tlogger.log('info', 'Connector: Keen connected.');\n\t\tself._ready();\n\t\treturn client;\n\t}\n\n}\n\nexport default function(urls) {\n\treturn new Connector(urls);\n}"]}