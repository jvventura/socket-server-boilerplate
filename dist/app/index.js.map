{"version":3,"sources":["../../src/app/index.js"],"names":["App","connections","jackrabbit","amqp","keen","on","_onConnected","bind","rabbit","doc","events","queue","name","prefetch","durabe","db","tracker","_onReady","emit","log","data","publish","key","self","consume","job","ack","eventName","type","count","recordEvent","err","param","Item","TableName","put","EventEmitter"],"mappings":"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","file":"index.js","sourcesContent":["import events from 'events';\n\nimport connections from './connector';\nimport logger from '../modules/logger';\n\nimport config from '../config';\n\nclass App extends events.EventEmitter {\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis.connections = connections({\n\t\t\tjackrabbit: config.connections.amqp,\n\t\t\tkeen: config.connections.keen\n\t\t});\n\n\t\tthis.connections.on('ready', this._onConnected.bind(this));\n\n\t\tthis.rabbit = {};\n\t\tthis.doc;\n\t}\n\n\t// 'Private' methods.\n\n\t_onConnected() {\n\n\t\t// Setup jackrabbit queues.\n\t\tthis.rabbit.events = this.connections.queue.queue({\n\t\t\tname: 'jobs.event',\n\t\t\tprefetch: 5,\n\t\t\tdurabe: true\n\t\t});\n\n\t\tthis.rabbit.db = this.connections.queue.queue({\n\t\t\tname: 'jobs.db',\n\t\t\tprefetch: 5,\n\t\t\tdurabe: true\n\t\t});\n\n\t\tthis.rabbit.tracker = this.connections.queue.queue({\n\t\t\tname: 'jobs.tracker',\n\t\t\tprefetch: 5,\n\t\t\tdurabe: true\n\t\t});\n\n\t\t// Instantiate DynamoDB document client for easy marshalling.\n\t\tthis.doc = this.connections.db.doc;\n\n\t\tthis._onReady();\n\t}\n\n\t_onReady() {\n\t\tthis.emit('ready');\n\t\tlogger.log('info', 'App: Ready!')\n\t}\n\n\t_onLost() {\n\t\tthis.emit('lost');\n\t\tlogger.log('info', 'App: Disconnected.');\n\t}\n\n\t// 'Public' methods.\n\t\t// process event (pass msg data to queue for worker)\n\n\tqueue(data) {\n\t\tthis.connections.queue.publish(data, {key: 'jobs.event'});\n\t}\n\n\tprocess() {\n\t\tlet self = this;\n\n\t\tthis.rabbit.events.consume((job, ack) => {\n\t\t\tlet eventName = job.type || 'unclassified';\n\t\t\tlet count = 2;\n\n\t\t\tthis.connections.queue.publish(job, {key: 'jobs.tracker'});\n\t\t\tthis.connections.queue.publish(job, {key: 'jobs.db'});\n\n\t\t\tack();\n\t\t});\n\n\t\tthis.rabbit.tracker.consume((job, ack) => {\n\t\t\tlet eventName = job.type || 'unclassified';\n\n\t\t\tself.connections.tracker.recordEvent(eventName, job, err => {\n\t\t\t\tif (err) {\n\t\t\t\t\tlogger.log('warn', 'App: tracker error.', err);\n\t\t\t\t\treturn;\n\t\t\t\t} else {\n\t\t\t\t\tlogger.log('info', 'App: tracker processed event.', job);\n\t\t\t\t\tack();\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\tthis.rabbit.db.consume((job, ack) => {\n\t\t\tlet param = {\n\t\t\t\tItem: job,\n\t\t\t\tTableName: 'events'\n\t\t\t};\n\t\t\tself.doc.put(param, err => {\n\t\t\t\tif (err) {\n\t\t\t\t\tlogger.log('warn', 'App: db error.', err);\n\t\t\t\t\treturn;\n\t\t\t\t} else {\n\t\t\t\t\tlogger.log('info', 'App: db processed event.', job);\n\t\t\t\t\tack();\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n}\n\nexport default function() {\n\treturn new App();\n}"]}