{"version":3,"sources":["../../src/web/sockets.js"],"names":["io","on","socket","handshake","session","Function","compose","checkUser","checkSession"],"mappings":";;AAAAA,GAAGC,EAAH,CAAM,YAAN,EAAoB,kBAAU;;AAE7B;AACC;AACA;AACDC,QAAOD,EAAP,CAAU,SAAV,EAAqB,YAAM;AAC1B,MAAI,CAACC,OAAOC,SAAP,CAAiBC,OAAtB,EAA+B;AAC9BC,YAASC,OAAT,CAAiBC,SAAjB,EAA4BC,YAA5B,EAD8B,CACa;AAC3C;AACA;AACA;AACD,EAND;;AAQAN,QAAOD,EAAP,CAAU,SAAV,EAAqB,gBAAQ;AAC5B;AACA;AACA;AACA,EAJD;;AAOA,UAASM,SAAT,GAAqB,CAAE;AACvB,UAASC,YAAT,GAAwB,CAAE;AAC1B,CAtBD","file":"sockets.js","sourcesContent":["io.on('connection', socket => {\n\n\t// user data scheme:\n\t\t// user id, 'infinite' duration\n\t\t// session id, session duration\n\tsocket.on('connect', () => {\n\t\tif (!socket.handshake.session) {\n\t\t\tFunction.compose(checkUser, checkSession); // dunno if this will work\n\t\t\t// if no user id supplied, generate a new one\n\t\t\t// if no session is supplied, generate a new one\n\t\t}\n\t});\n\n\tsocket.on('message', data => {\n\t\t// double check user and session!\n\t\t// validate message\n\t\t// call App.queueData\n\t});\n\n\n\tfunction checkUser() {}\n\tfunction checkSession() {}\n});"]}